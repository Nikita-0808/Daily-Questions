Leetcode Question no. 2331 - Evaluate Boolean Binary Tree
https://leetcode.com/problems/evaluate-boolean-binary-tree/?envType=daily-question&envId=2024-05-16

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean evaluateTree(TreeNode root) {
        //for leaf node;
        if(root.left == null && root.right == null){
            if( root.val == 0){
                return false;
            }
            else return true;
        }

        // for non - leaf node
        int value = root.val;
        boolean x = evaluateTree(root.left);
        boolean y = evaluateTree(root.right);
        if(value == 2){
           return x || y;
        }
        else if(value == 3){
            return x && y;
        }
        return false;
    }
}

Note:- Time Complexity = O(n) and Space Complexity = O(h) where h is height of the tree.
